server.port=8081
#server.servlet.context-path=/server

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false
# Antipattern? Consider use of @EntityGraph
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.datasource.url=jdbc:postgresql://db:5432/spring_boot_angular_db
#spring.datasource.url=jdbc:postgresql://localhost:5432/spring_boot_angular_db
spring.datasource.username=postgres
spring.datasource.password=changeit
spring.datasource.driver-class-name=org.postgresql.Driver

#security.oauth2.sso.login-path=/login

#logging.level.org.springframework.data.r2dbc=DEBUG

# ==========
# = Google =
# ==========
google.client.client-id=1234567890test
google.client.client-secret=7dfha81test

google.client.access-token-uri=https://www.googleapis.com/oauth2/v4/token
google.client.user-authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
google.client.client-authentication-scheme=form
google.client.scope=https://www.googleapis.com/auth/userinfo.profile

google.resource.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo


# ==========
# = Github =
# ==========
github.client.client-id=1234567890test
github.client.client-secret=7dfha81test

github.client.access-token-uri=https://github.com/login/oauth/access_token
github.client.user-authorization-uri=https://github.com/login/oauth/authorize
github.client.client-authentication-scheme=form
#github.client.scope=user repo

github.resource.user-info-uri=https://api.github.com/user
#github.resource.prefer-token-info=true
